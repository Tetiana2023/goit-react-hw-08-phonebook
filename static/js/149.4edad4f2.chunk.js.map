{"version":3,"file":"static/js/149.4edad4f2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/contacts/contactsSelectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/FilterContact/FilterContact.module.css?d984","components/FilterContact/FilterContact.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"button\":\"ContactItem_button__IRFBz\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n// import Button from '@mui/material/Button';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  // const { name, number, id } = contact;\n\n  const onClick = ()=> {\n    dispatch(deleteContact(id))\n  }\n  return (\n    <>\n      <div className={css.item}>\n        <p>{name}:</p>\n        <p>{number}</p>\n        <button\n          className={css.button}\n          type=\"button\"\n          onClick={onClick}\n          // onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete\n        </button>\n      </div>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"form\":\"ContactList_form__YbZHX\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.phonebook.items;\nexport const selectError = state => state.phonebook.error;\nexport const selectIsLoading = state => state.phonebook.isLoading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFiltredContacts = createSelector (\n    [selectContacts, selectFilter], (contacts, filter )=> contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n)\n)\n","import React from 'react';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { selectFiltredContacts } from 'redux/contacts/contactsSelectors';\n// import { deleteContact } from 'services/fetch';\n\nexport const ContactList = () => {\n  const FiltredContacts = useSelector(selectFiltredContacts);\n\n  return (\n    <ul className={css.form}>\n      {FiltredContacts.map(contact => (\n        <li className={css.list} key={contact.id}>\n          <ContactItem\n            key={contact.id}\n            name={contact.name}\n            number={contact.number}\n            id={contact.id}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n// export const ContactList = () => {\n//   const FiltredContacts = useSelector(getFiltredContacts);\n\n//   return (\n//     <>\n//       <ul>\n//         {FiltredContacts.map(contact => (\n//           <li className={css.list} key={contact.id}>\n//             <ContactItem contact={contact} />\n//           </li>\n//         ))}\n//       </ul>\n//     </>\n//   );\n// };\nContactList.propType = {\n  contacts: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FilterContact_form__h+J+t\"};","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { updateFilter } from 'redux/filter/filterSlice';\nimport TextField from '@mui/material/TextField';\nimport css from './FilterContact.module.css';\n\nexport const FilterContact = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  // const hendleFilter = event => {\n  //     dispatch(updateFilter(event.target.value));\n  //   };\n\n  const filterId = nanoid();\n  return (\n    <div className={css.form}>\n    <TextField\n      htmlFor={filterId}\n      id=\"outlined-basic\"\n      label=\"Find contacts by Name\"\n      variant=\"outlined\"\n      size=\"small\"\n      type=\"text\"\n      value={filter}\n      name=\"filter\"\n      onChange={event => dispatch(updateFilter(event.target.value))}\n    />\n    </div>\n  );\n};\nFilterContact.propType = {\n  value: PropTypes.string.isRequired,\n  hendleFilter: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Section_title__SLHvV\"};","import css from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({title, children}) => {\n    return (\n        <>\n        {title && <h1 className={css.title}>{title}</h1>}\n        {children}\n        </>\n    )\n}\nSection.propType ={\n    title:PropTypes.string.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formbtn\":\"ContactForm_formbtn__5569G\"};","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport Notiflix from 'notiflix';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  //  const isContactExist = contacts.find(\n  //   contact => contact.name.toLowerCase() === name.toLowerCase()\n  // );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.info(`name: ${name} is already in contacts`);\n      reset();\n      return;\n    }\n\n    if (contacts.find(contact => contact.number === number)) {\n      Notiflix.Notify.info(`number: ${number} is already in contacts`);\n      reset();\n      return;\n    }\n    //  isContactExist\n    // ? alert(`${name} is alreadi in contacts`)\n    dispatch(addContact({ name, number, id: nanoid() }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  const nameId = nanoid();\n  const numberId = nanoid();\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <TextField\n        htmlFor={nameId}\n        id=\"outlined-basic\"\n        label=\"Name\"\n        variant=\"outlined\"\n        size=\"small\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleInputChange}\n      />\n\n      <TextField\n        htmlFor={numberId}\n        id=\"outlined-basic\"\n        label=\"Number\"\n        variant=\"outlined\"\n        size=\"small\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleInputChange}\n      />\n\n      <Button className={css.formbtn} type=\"submit\">\n        Add contact\n      </Button>\n    </form>\n  );\n};\n","import React from 'react';\n// import { FormContact } from './ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList'\nimport { FilterContact } from 'components/FilterContact/FilterContact';\n// import {Loader} from './Loader/Loader';\nimport { Section } from 'components/Section/Section';\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectError, selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\n// import css from './App.module.css';\n\nexport default function Contacts () {\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div >\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      {isLoading && !error && <p>Loading...</p> } \n      {contacts.length > 0 && (\n        <Section title=\"Contacts\">\n          <FilterContact />\n          <ContactList/>\n         \n        </Section>\n      )}\n    </div>\n  );\n};\n"],"names":["ContactItem","name","number","id","dispatch","useDispatch","className","css","type","onClick","deleteContact","selectContacts","state","phonebook","items","selectError","error","selectIsLoading","isLoading","selectFilter","filter","selectFiltredContacts","createSelector","contacts","contact","toLowerCase","includes","ContactList","FiltredContacts","useSelector","map","propType","PropTypes","isRequired","FilterContact","filterId","nanoid","TextField","htmlFor","label","variant","size","value","onChange","event","updateFilter","target","hendleFilter","Section","title","children","ContactForm","useState","setName","setNumber","handleInputChange","reset","nameId","numberId","onSubmit","e","preventDefault","find","Notiflix","addContact","pattern","required","Button","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}